openapi: 3.0.0
info:
  title: WASAPhoto API
  version: 1.0.0
  description: WASAPhoto API for our university course on web and software architecture
tags:
  - name: login
  - name: user
  - name: comment
  - name: like
  - name: photo
  
security:
  - BearerAuth: []
  
  
paths:
  /session:
    post:
      tags: [login]
      summary: Logs in the user
      description: |
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: User's name
                  minLength: 3
                  maxLength: 50
                  pattern: "^[a-zA-Z0-9_]+$"  # Add a pattern for every string property
        required: true
      responses:
        '201':
          description: User log-in action successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
                    minLength: 10
                    maxLength: 20
                    pattern: "^[a-zA-Z0-9_]+$"  # Add a pattern for every string property

  /user:
    post:
      tags: [user]
      summary: Create User
      description: Create a new user.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User's username
                  minLength: 4
                  maxLength: 30
                  pattern: "^[a-zA-Z0-9_]+$"
                password:
                  type: string
                  description: User's password
                  minLength: 8
                  maxLength: 50
                  pattern: "^[a-zA-Z0-9_]+$"
                email:
                  type: string
                  description: User's email
                  minLength: 5
                  maxLength: 100
                  pattern: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$"  # Add email pattern
                birthday:
                  type: string
                  minLength: 7
                  maxLength: 10
                  description: User's birthday
                  pattern: "^d{4}-d{2}-d{2}$"  # Add birthday pattern
                security_question:
                  type: string
                  description: User's security question
                  minLength: 10
                  maxLength: 150
                  pattern: "^[a-zA-Z0-9_]+$"
                matricola:
                  type: integer

      responses:
        '201':
          description: User created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    minLength: 10
                    maxLength: 20
                    pattern: "^[a-zA-Z0-9_]+$"

        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/{userId}:
    get:
      tags: [user]
      summary: Get User Profile
      description: Get the profile of a user.
      operationId: getUserProfile
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            minLength: 10
            maxLength: 20
            pattern: "^[a-zA-Z0-9_]+$"

      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userProfile:
                    type: object
                    description: User's profile

        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
                
    
  /user/{userId}/ban:
    post:
      tags: [user]
      summary: Ban User
      description: Ban a user.
      operationId: banUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            minLength: 10
            maxLength: 20
            pattern: "^[a-zA-Z0-9_]+$"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: User ID to ban
                  minLength: 10
                  maxLength: 20
                  pattern: "^[a-zA-Z0-9_]+$"
  
      responses:
        '200':
          description: User banned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    maxLength: 200
                    pattern: "^[a-zA-Z0-9_]+$"
  
        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /user/{userId}/stream:
    get:
      tags: [user]
      summary: Get My Stream
      description: Retrieve the user's stream.
      parameters:
          - name: userId
            in: path
            required: true
            schema:
              type: string
              minLength: 10
              maxLength: 20
              pattern: "^[a-zA-Z0-9_]+$"
      operationId: getMyStream
      
  
      responses:
        '200':
          description: User's stream retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  stream:
                    type: array
                    minItems: 0
                    maxItems: 100
                    items:
                      type: object
                      description: Stream item
                      properties:
                        itemProperty:
                          type: string
                          description: Description of item property
                          pattern: "^[a-zA-Z0-9_]+$"
  
        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'             
  /user/{userId}/name:
    put:
      tags: [user]
      summary: Set My User Name
      description: Set the user's username.
      operationId: setMyUserName
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            minLength: 10
            maxLength: 20
            pattern: "^[a-zA-Z0-9_]+$"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: New username
                  minLength: 4
                  maxLength: 30
                  pattern: "^[a-zA-Z0-9_]+$"

      responses:
        '200':
          description: User's username updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    maxLength: 200
                    pattern: "^[a-zA-Z0-9_]+$"

        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'            
  
  /user/{userId}/unban:
    post:
      summary: Unban User
      description: Unban a user.
      operationId: unbanUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            minLength: 10
            maxLength: 20
            pattern: "^[a-zA-Z0-9_]+$"
      requestBody:
        required: true
        content:
      
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: User ID to unban
                  minLength: 10
                  maxLength: 20
                  pattern: "^[a-zA-Z0-9_]+$"
  
      responses:
        '200':
          description: User unbanned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    maxLength: 200
                    pattern: "^[a-zA-Z0-9_]+$"
  
        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
                
                
  /user/{userId}/follow:
    post:
      summary: Follow User
      description: Follow a user.
      operationId: followUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            minLength: 10
            maxLength: 20
            pattern: "^[a-zA-Z0-9_]+$"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: User ID to follow
                  minLength: 10
                  maxLength: 20
                  pattern: "^[a-zA-Z0-9_]+$"

      responses:
        '200':
          description: User followed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    maxLength: 200
                    pattern: "^[a-zA-Z0-9_]+$"

        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/{userId}/unfollow:
    post:
      summary: Unfollow User
      description: Unfollow a user.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            minLength: 10
            maxLength: 20
            pattern: "^[a-zA-Z0-9_]+$"
      operationId: unfollowUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: User ID to unfollow
                  minLength: 10
                  maxLength: 20
                  pattern: "^[a-zA-Z0-9_]+$"

      responses:
        '200':
          description: User unfollowed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    maxLength: 200
                    pattern: "^[a-zA-Z0-9_]+$"

        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /comment:
    post:
      summary: Comment on Photo
      description: Comment on a photo.
      operationId: commentPhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
                  description: Photo ID
                  minLength: 10
                  maxLength: 20
                  pattern: "^[a-zA-Z0-9_]+$"

      responses:
        '201':
          description: Comment added to the photo successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    maxLength: 200
                    pattern: "^[a-zA-Z0-9_]+$"

        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /comment/{commentId}:
    delete:
      summary: Remove Comment from Photo
      description: Remove a comment from a photo.
      operationId: uncommentPhoto
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: string
            minLength: 10
            maxLength: 20
            pattern: "^[a-zA-Z0-9_]+$"

      responses:
        '200':
          description: Comment removed from the photo successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    maxLength: 200
                    pattern: "^[a-zA-Z0-9_]+$"

        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /like:
    post:
      summary: Like Photo
      description: Like a photo.
      operationId: likePhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
                  description: Photo ID
                  minLength: 10
                  maxLength: 20
                  pattern: "^[a-zA-Z0-9_]+$"

      responses:
        '201':
          description: Photo liked successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    maxLength: 200
                    pattern: "^[a-zA-Z0-9_]+$"

        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


     

  /like/{likeId}:
    delete:
      summary: Unlike Photo
      description: Unlike a photo.
      operationId: unlikePhoto
      parameters:
        - name: likeId
          in: path
          required: true
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]{10,20}$'  # Pattern added
      responses:
        '200':
          description: Photo unliked successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    maxLength: 200

        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /photo:
    post:
      summary: Upload Photo
      description: Upload a photo.
      operationId: uploadPhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photo:
                  type: string
                  description: Base64-encoded image data
                  minLength: 50
                  maxLength: 500000
      responses:
        '201':
          description: Photo uploaded successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  photoId:
                    type: string
                    pattern: '^[a-zA-Z0-9]{10,20}$'  # Pattern added

        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /photo/{photoId}:
    delete:
      summary: Delete Photo
      description: Delete a photo.
      operationId: deletePhoto
      parameters:
        - name: photoId
          in: path
          required: true
          schema:
            type: string
            pattern: '^[a-zA-Z0-9]{10,20}$'  # Pattern added
      responses:
        '200':
          description: Photo deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    maxLength: 200

        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          minLength: 1
          maxLength: 200

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
