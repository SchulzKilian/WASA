openapi: 3.0.0
info:
  title: WASAPhoto API
  version: 1.0.0
  description: WASAPhoto API for various photo-related operations.
paths:
  /login:
    post:
      summary: Login with Bearer Authentication
      requestBody:
        description: User credentials
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /setMyUserName:
    post:
      summary: Set My User Name
      description: |
        Sets the username for the currently authenticated user.
      operationId: setMyUserName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newUsername:
                  type: string
      responses:
        '200':
          description: Username updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /uploadPhoto:
    post:
      summary: Upload Photo
      description: |
        Allows the authenticated user to upload a photo.
      operationId: uploadPhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photo:
                  type: string
      responses:
        '201':
          description: Photo uploaded successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  photoId:
                    type: string
        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /followUser:
    post:
      summary: Follow User
      description: |
        Allows the authenticated user to follow another user.
      operationId: followUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
      responses:
        '200':
          description: User followed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /unfollowUser:
    post:
      summary: Unfollow User
      description: |
        Allows the authenticated user to unfollow another user.
      operationId: unfollowUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
      responses:
        '200':
          description: User unfollowed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /banUser:
    post:
      summary: Ban User
      description: |
        Allows the authenticated user to ban another user.
      operationId: banUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
      responses:
        '200':
          description: User banned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /unbanUser:
    post:
      summary: Unban User
      description: |
        Allows the authenticated user to unban another user.
      operationId: unbanUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
      responses:
        '200':
          description: User unbanned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /getUserProfile:
    get:
      summary: Get User Profile
      description: |
        Allows the authenticated user to get the profile of another user.
      operationId: getUserProfile
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  userProfile:
                    type: object
                    # Define user profile properties here
        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /getMyStream:
    get:
      summary: Get My Stream
      description: |
        Allows the authenticated user to retrieve their stream.
      operationId: getMyStream
      responses:
        '200':
          description: User stream retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  userStream:
                    type: array
                    items:
                      type: object
                      properties:
                        streamItemProperty1:
                          type: string
                          # Define properties of a stream item as needed
                        streamItemProperty2:
                          type: integer
                          # Define more properties as needed
        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /likePhoto:
    post:
      summary: Like Photo
      description: |
        Allows the authenticated user to like a photo.
      operationId: likePhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
      responses:
        '200':
          description: Photo liked successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /unlikePhoto:
    delete:
      summary: Unlike Photo
      description: |
        Allows the authenticated user to unlike a photo.
      operationId: unlikePhoto
      
      responses:
        '200':
          description: Photo unliked successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /commentPhoto:
    post:
      summary: Comment on Photo
      description: |
        Allows the authenticated user to comment on a photo.
      operationId: commentPhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
                comment:
                  type: string
      responses:
        '200':
          description: Comment added to the photo successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /uncommentPhoto:
    delete:
      summary: Remove Comment from Photo
      description: |
        Allows the authenticated user to remove their comment from a photo.
      operationId: uncommentPhoto

      responses:
        '200':
          description: Comment removed from the photo successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /deletePhoto:
    delete:
      summary: Delete Photo
      description: |
        Allows the authenticated user to delete their own photo.
      operationId: deletePhoto
      parameters:
        - name: photoId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Photo deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized. User authentication failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
security:
  - bearerAuth: []
